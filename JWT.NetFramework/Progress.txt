.NET Web API projesi oluşturacağız ve System.IdentityModel.Tokens.Jwt kütüphanesi kullanarak JWT token doğrulama işlemlerini gerçekleştireceğiz.

Proje Oluşturma

Visual Studio açın ve File -> New -> Project adımlarını takip ederek yeni bir .NET Web API projesi oluşturun.

Projeyi oluşturduktan sonra, NuGet Paket Yöneticisi'nden "System.IdentityModel.Tokens.Jwt" paketini yükleyin.

JWT Token Doğrulama Sınıfı

JWT token doğrulama işlemlerini gerçekleştirecek olan sınıfımızı oluşturacağız. Bunun için, Helpers klasörü altında JwtAuthentication.cs adında bir sınıf oluşturun.

Bu sınıf, JWT token doğrulama işlemlerini gerçekleştirmek için TryValidateToken() ve GenerateToken() methodlarını içerir.

TryValidateToken() methodu, bir JWT token'ın doğruluğunu kontrol eder ve doğruysa, ClaimsPrincipal nesnesi döndürür. Bu method, TokenValidationParameters sınıfı kullanılarak JWT token'ın doğrulanması işlemini gerçekleştirir.

GenerateToken() methodu, bir ClaimsIdentity nesnesi ve token'ın geçerlilik süresi (expiration time) parametreleri alır ve bir JWT token oluşturur.

JWT Token Doğrulama Attribute'ü

JWT token doğrulama işlemini bir attribute haline getireceğiz. Bunun için, Attributes klasörü altında JwtAuthenticationAttribute.cs adında bir sınıf oluşturun.

Bu sınıf, AuthorizationFilterAttribute sınıfından kalıtımalır ve OnAuthorization() methodunu override ederek JWT token doğrulama işlemini gerçekleştirir.

OnAuthorization() methodu, gelen isteği kontrol eder ve JWT token'ın varlığını ve doğruluğunu doğrular. Eğer token geçerli değilse, isteği reddeder ve HttpStatusCode.Unauthorized cevabı verir.

JWT Token Doğrulama Attribute'ü Kullanımı

JWT token doğrulama işlemini gerçekleştirecek olan attribute'ü, controller methodlarında kullanabiliriz. Bunun için, örneğin ValuesController sınıfını açın ve bir method'a attribute ekleyin:

JwtAuthentication attribute'ünü Get() methoduna ekledik. Bu sayede, Get() methodu sadece geçerli bir JWT token ile çağrılabilir.

______________________________________________________________

.NET Framework için JWT kimlik doğrulama mekanizması için, "System.IdentityModel.Tokens.Jwt" kütüphanesini kullanabilirsiniz. 
Bu kütüphane, .NET Framework 4.6 ve sonraki sürümlerinde yerleşik olarak bulunur.

.NET Framework 4.7.2 sürümü, .NET Framework 4.6 ve sonraki sürümleri gibi, "System.IdentityModel.Tokens.Jwt" kütüphanesini içerir.

Bu nedenle, .NET Framework 4.7.2 ile birlikte, JWT kimlik doğrulama mekanizması uygularken "System.IdentityModel.Tokens.Jwt" kütüphanesini kullanabilirsiniz. Bu kütüphane, JWT token oluşturma ve doğrulama işlemlerini gerçekleştirmek için kullanılır.

Ancak, .NET Framework 4.7.2'de ayrıca "Microsoft.Owin.Security.Jwt" paketi de kullanılabilir. Bu paket, .NET Framework ile çalışan OWIN (Open Web Interface for .NET) uygulamalarında JWT kimlik doğrulama mekanizması için kullanılır.

Bu nedenle, .NET Framework 4.7.2 ile JWT kimlik doğrulama mekanizması uygularken, "System.IdentityModel.Tokens.Jwt" veya "Microsoft.Owin.Security.Jwt" paketlerinden birini kullanabilirsiniz. Hangi paketi kullanacağınıza karar vermek için, projenizin ihtiyaçlarına ve gereksinimlerine göre karar vermeniz gerekebilir.

    -- JWT kimlik doğrulama mekanizmasını uygularken "System.IdentityModel.Tokens.Jwt" ve "Microsoft.Owin.Security.Jwt" paketleri arasındaki fark nedir?

    "System.IdentityModel.Tokens.Jwt" ve "Microsoft.Owin.Security.Jwt" paketleri, .NET Framework kullanılarak uygulanan JWT kimlik doğrulama mekanizması için kullanılan iki farklı kütüphanedir.

    "System.IdentityModel.Tokens.Jwt" kütüphanesi, JWT token oluşturma ve doğrulama işlemlerini gerçekleştirmek için kullanılır. Bu kütüphane, .NET Framework 4.6 ve sonraki    sürümlerinde yerleşik olarak bulunan bir kütüphanedir.
    
    "Microsoft.Owin.Security.Jwt" paketi ise, .NET Framework ile çalışan OWIN (Open Web Interface for .NET) uygulamalarında JWT kimlik doğrulama mekanizması için kullanılan bir     NuGet paketidir. Bu paket, JWT token oluşturma ve doğrulama işlemlerini gerçekleştirmek için kullanılır.
    
    Farklılıklarına gelince, "System.IdentityModel.Tokens.Jwt" kütüphanesi, .NET Framework'ün yerleşik bir parçası olduğu için, projelerinize NuGet paketleri yüklemek zorunda  kalmadan doğrudan kullanabileceğiniz bir kütüphanedir. Ayrıca, bu kütüphane, JWT token oluşturma ve doğrulama işlemleri için gerekli olan çeşitli sınıflar ve yöntemler  sağlar.
    
    "Microsoft.Owin.Security.Jwt" paketi ise, .NET Framework ile çalışan OWIN uygulamalarında kullanılmak üzere özel olarak tasarlanmış bir pakettir. Bu paket, JWT token   oluşturma ve doğrulama işlemleri için gerekli olan çeşitli sınıflar ve yöntemler sağlar. Ayrıca, bu paket, OWIN için gerekli diğer bileşenleri de içerir ve OAuth2 kimlik     doğrulama mekanizması gibi diğer kimlik doğrulama yöntemlerini de destekler.
    
    Bu nedenle, "System.IdentityModel.Tokens.Jwt" kütüphanesi, .NET Framework ile JWT kimlik doğrulama mekanizması uygularken doğrudan kullanabileceğiniz bir kütüphanedir.     "Microsoft.Owin.Security.Jwt" paketi ise, .NET Framework ile OWIN kullanan uygulamalar için özel olarak tasarlanmış bir pakettir ve OAuth2 kimlik doğrulama mekanizması     gibi diğer kimlik doğrulama yöntemlerini de destekler. Hangi kütüphaneyi kullanacağınıza karar vermek, projenizin ihtiyaçlarına ve gereksinimlerine göre değişebilir.
    
